angular.module("fgModal", ["ngAnimate"]).provider("Modal", function() {
    var e = function(e, n) {
            this.templateUrl = n.templateUrl, this.template = n.template, this.defaults = n.defaults || {}, this.controller = n.controller, this.resolve = n.resolve || {}, this.name = e
        },
        n = {},
        t = this;
    this.modal = function(i, o) {
        return n[i] = function(n) {
            var t = n.invoke(o);
            return new e(i, t)
        }, t
    }, this.loadingTemplateUrl = null, this.loadingMask = !0, this.$get = ["$document", "$compile", "$rootScope", "$http", "$templateCache", "$q", "$animate", "$injector", "$controller", function(i, o, r, s, l, a, c, d, u) {
        Object.keys(n).forEach(function(e) {
            n[e] = n[e](d)
        });
        var h, f = r.$new(),
            m = [];
        f.loadingTemplateUrl = t.loadingTemplateUrl;
        var p = function(e) {
                var n = this,
                    t = {
                        accept: a.defer(),
                        dismiss: a.defer(),
                        destroy: a.defer()
                    },
                    i = {
                        link: [],
                        overlay: [],
                        conceal: [],
                        accept: [],
                        dismiss: [],
                        destroy: []
                    },
                    o = function(e) {
                        return a.all(i[e].map(function(e) {
                            return a.when(e())
                        })).then(function() {
                            return t[e].resolve(), t[e].promise
                        })
                    },
                    r = function(e) {
                        i[e].forEach(function(e) {
                            e()
                        })
                    };
                this.$template = e, this.$index = 0, this.accept = function() {
                    return o("accept").then(n.destroy)
                }, this.dismiss = function() {
                    return o("dismiss").then(n.destroy)
                }, this.destroy = function() {
                    return o("destroy").then(function() {
                        var e = m.indexOf(n);
                        m.splice(e, 1), n.$element.remove(), m.forEach(function(e) {
                            e.$index > n.$index && e.overlay()
                        }), f.show = m.length, n.$scope.$destroy()
                    })
                }, this.when = function(e) {
                    return t[e].promise
                }, this.overlay = function() {
                    0 !== n.$index && (n.$element.css("z-index", "+=1"), n.$index--, r("overlay"))
                }, this.conceal = function() {
                    n.$element.css("z-index", "-=1"), n.$index++, r("conceal")
                }, this.on = function(e, t) {
                    return e.split(" ").forEach(function(e) {
                        i[e].push(t.bind(n))
                    }), n
                }, this.$$trigger = r
            },
            h = o(angular.element(['<div class="fg-modal-wrapper ng-hide" ng-show="show">', '<div ng-show="loading" ng-include="loadingTemplateUrl"></div>', '<div ng-click="dismiss()" class="fg-modal-background"></div>', "</div>"].join("")))(f);
        i.find("body").append(h), e.prototype.pop = function(e) {
            var n = new p(this);
            e = e || {}, e = e.$id ? e.$new() : Object.keys(e).reduce(function(n, t) {
                return n[t] = e[t], n
            }, f.$new()), e.$modal = n;
            var i = this;
            return f.loading = !f.show && t.loadingMask, f.show = f.show || t.loadingMask, a.all({
                locals: a.all(Object.keys(this.resolve).reduce(function(e, n) {
                    return e[n] = a.when(d.invoke(i.resolve[n])), e
                }, {
                    $scope: e,
                    $modal: n
                })),
                template: a.when(this.template || s({
                    method: "GET",
                    cache: l,
                    url: this.templateUrl,
                    type: "text/html"
                }))
            }).then(function(t) {
                var r = o(t.template.data)(e);
                n.$scope = e, i.controller && u(i.controller, t.locals), f.loading = !1, f.show = !0, h.append(r), n.$element = r, r.css("z-index", 1e4), m.forEach(function(e) {
                    e.conceal()
                }), m.unshift(n), n.$$trigger("link")
            }), Object.keys(this.defaults).forEach(function(e) {
                var t = i.defaults[e];
                (t instanceof Array ? t : [t]).forEach(function(t) {
                    n.on(e, t)
                })
            }), n
        };
        var $ = function(e) {
            return e ? n[e] : m[0]
        };
        return $.list = function() {
            return m.sort(function(e, n) {
                return e.$index > n.$index
            })
        }, f.dismiss = function() {
            var e = $.list()[0];
            e && e.dismiss()
        }, $
    }]
});
